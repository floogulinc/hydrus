/* 
Nord: A Nord-like theme for Hydrus Network by discomrade
Version..: 1.0

Code based on Dark_Blue.qss 1.0 by B1N4RYJ4N with snippets from Hydracula.

To achieve the intended results you must:

1. Activate dark mode
2. adjust the Qt style to Fusion
3. adjust the Qt stylesheet to Nord
4. adjust the current colourset under files > options > colors > current colourset to darkmode
5. adjust your color values under files > options > colors > darkmode like so:
   
   thumbnail background normal..: #2e3440
   thumbnail background selected: #3b4252
   thumbnail border normal......: #3b4252
   thumbnail border selected....: #5e81ac
   thumbnail grid background....: #2e3440
   autocomplete background......: #3b4252
   media viewer background......: #2e3440
   media viewer text............: #4c566a / #d8dee9
   tag box background...........: #2e3440

6. adjust your tag presentation color values under files > options > tag presentation > (On thumbnail top, On thumbnail bottom-right, On media viewer top) like so:
   
   background colour............: #3b4252
   text colour..................: #e5e9f0

7. Adjust tag namespace coloring to match the theme. Consider Aurora and Frost colors from https://www.nordtheme.com/docs/colors-and-palettes

*/


/*
   ___                          _ 
  / _ \___ _ __   ___ _ __ __ _| |
 / /_\/ _ \ '_ \ / _ \ '__/ _` | |
/ /_\\  __/ | | |  __/ | | (_| | |
\____/\___|_| |_|\___|_|  \__,_|_|

*/

QAbstractItemView {
    background-color: #3b4252;
}

/* Remove a few redundant cluttersome frames */
QAbstractScrollArea[frameWidth="1"] {
    border: none;
}

/* Replace raised border shadows on frames */
QFrame[frameWidth="1"], QFrame[frameWidth="2"], QFrame[frameWidth="3"] {
    border: 1px solid #3b4252;
}

/* Recolor list borders to match other frames */
QListView {
    border: 1px solid #3b4252;
}

/* Add margin to settings page list to align with other widgets. This is hacky. */
QDialog QAbstractScrollArea > QWidget > QWidget > QWidget > QListView {
    margin: 2px 0 2px 2px;
}

QLabel#HydrusHyperlink {
    qproperty-link_color: #8fbcbb;
}

/*
   ____  __    __ _     _            _   
  /___ \/ / /\ \ (_) __| | __ _  ___| |_ 
 //  / /\ \/  \/ / |/ _` |/ _` |/ _ \ __|
/ \_/ /  \  /\  /| | (_| | (_| |  __/ |_ 
\___,_\   \/  \/ |_|\__,_|\__, |\___|\__|
                          |___/          

*/

QWidget {
    color: #e5e9f0;
    background-color: #2e3440;
    alternate-background-color: #3b4252;
}

QWidget::disabled, QWidget::disabled:hover {
    color: #4c566a;
    background-color: #3b4252;
}

QWidget::item::selected {
    color: #e5e9f0;
    background-color: #5e81ac;
}

QWidget::item:hover {
    color: #e5e9f0;
    background-color: #5e81ac;
}

/*
   ____  _____            _ _____ _       
  /___ \/__   \___   ___ | /__   (_)_ __  
 //  / /  / /\/ _ \ / _ \| | / /\/ | '_ \ 
/ \_/ /  / / | (_) | (_) | |/ /  | | |_) |
\___,_\  \/   \___/ \___/|_|\/   |_| .__/ 
                                   |_|    

*/

QToolTip {
    color: #e5e9f0;
    border: 1px solid #3b4252;
    background-color: #434c5e;
    padding: 1px;
}

/*
   ____                        
  /___ \/\/\   ___ _ __  _   _ 
 //  / /    \ / _ \ '_ \| | | |
/ \_/ / /\/\ \  __/ | | | |_| |
\___,_\/    \/\___|_| |_|\__,_|

*/

QMenu {
    color: #e5e9f0;
    background: #2e3440;
}

QMenu::item {
    padding: 2px 20px 2px 20px;
}

QMenu::item:selected {
    color: #eceff4;
    background: #5e81ac;
}

/*
   ____                          ___            
  /___ \/\/\   ___ _ __  _   _  / __\ __ _ _ __ 
 //  / /    \ / _ \ '_ \| | | |/__\/// _` | '__|
/ \_/ / /\/\ \  __/ | | | |_| / \/  \ (_| | |   
\___,_\/    \/\___|_| |_|\__,_\_____/\__,_|_|   

*/

QMenuBar::item {
    background: transparent;
}

QMenuBar::item:selected {
    color: #eceff4;
    background: #5e81ac;
}

/*
   ____  ___           _       ___       _   _              
  /___ \/ _ \_   _ ___| |__   / __\_   _| |_| |_ ___  _ __  
 //  / / /_)/ | | / __| '_ \ /__\// | | | __| __/ _ \| '_ \ 
/ \_/ / ___/| |_| \__ \ | | / \/  \ |_| | |_| || (_) | | | |
\___,_\/     \__,_|___/_| |_\_____/\__,_|\__|\__\___/|_| |_|

*/

QPushButton {
    color: #e5e9f0;
    background-color: #3b4252;
    border: 1px solid #44475a;
    padding: 3px;
    font-size: 12px;
    padding-left: 5px;
    padding-right: 5px;
}

QPushButton::hover {
    color: #eceff4;
    background-color: #434c5e;
}

QPushButton::disabled {
    color: #4c566a;
    background-color: #2e3440;
}

QPushButton#HydrusAccept {
    color: #a3be8c;
}

QPushButton#HydrusCancel {
    color: #bf616a;
}

QPushButton#HydrusOnOffButton[hydrus_on=true] {
    color: #a3be8c;
}

QPushButton#HydrusOnOffButton[hydrus_on=false] {
    color: #bf616a;
}

/*
   ____  ___                _             ___           
  /___ \/ __\___  _ __ ___ | |__   ___   / __\ _____  __
 //  / / /  / _ \| '_ ` _ \| '_ \ / _ \ /__\/// _ \ \/ /
/ \_/ / /__| (_) | | | | | | |_) | (_) / \/  \ (_) >  < 
\___,_\____/\___/|_| |_| |_|_.__/ \___/\_____/\___/_/\_\

*/

QComboBox {
    background-color: #3b4252;
    border: 1px solid #44475a;
    selection-background-color: #5e81ac;
}

QComboBox:hover {
    background-color: #434c5e;
}

QComboBox:on {
    padding-top: 3px;
    padding-left: 4px;
    background-color: #44475a;
    selection-background-color: #5e81ac;
}

QComboBox QAbstractItemView {
    border: 1px solid #44475a;
    selection-background-color: #5e81ac;
}

QComboBox::drop-down {
     subcontrol-origin: padding;
     subcontrol-position: top right;
     width: 15px;

     border-left-width: 0;
 }

QComboBox::down-arrow {
     image: url(:/down_arrow.png);
}

/*
   ____  _____      _       ___            
  /___ \/__   \__ _| |__   / __\ __ _ _ __ 
 //  / /  / /\/ _` | '_ \ /__\/// _` | '__|
/ \_/ /  / / | (_| | |_) / \/  \ (_| | |   
\___,_\  \/   \__,_|_.__/\_____/\__,_|_|   

*/

QTabBar::tab {
    color: #e5e9f0;
    background-color: #232831;
    padding-left: 10px;
    padding-right: 10px;
    padding-top: 3px;
    padding-bottom: 2px;
}

QTabBar::tab:last {
    border-top-right-radius: 3px;
}

QTabBar::tab:selected {
    color: #eceff4;
    background-color: #5e81ac;
}

QTabBar::tab:hover:!selected {
    color: #eceff4;
    background-color: #5e81ac;
}

/*
   ____  ___                                      ___            
  /___ \/ _ \_ __ ___   __ _ _ __ ___  ___ ___   / __\ __ _ _ __ 
 //  / / /_)/ '__/ _ \ / _` | '__/ _ \/ __/ __| /__\/// _` | '__|
/ \_/ / ___/| | | (_) | (_| | | |  __/\__ \__ \/ \/  \ (_| | |   
\___,_\/    |_|  \___/ \__, |_|  \___||___/___/\_____/\__,_|_|   
                       |___/                                     

*/

QProgressBar {
    color: #e5e9f0;
    border: 1px solid #5e81ac;
    text-align: center;
    padding: 1px;
    border-radius: 0px;
    background-color: #3b4252;
    width: 15px;
}

QProgressBar::chunk {
    color: #e5e9f0;
    background: QLinearGradient( x1: 0, y1: 0, x2: 1, y2: 0,
    stop: 0 #81a1c1,
    stop: 1 #5e81ac );
    border-radius: 0px;
    border: 0px;
}

/*
   ____                     _                 _               
  /___ \/\  /\___  __ _  __| | ___ _ __/\   /(_) _____      __
 //  / / /_/ / _ \/ _` |/ _` |/ _ \ '__\ \ / / |/ _ \ \ /\ / /
/ \_/ / __  /  __/ (_| | (_| |  __/ |   \ V /| |  __/\ V  V / 
\___,_\/ /_/ \___|\__,_|\__,_|\___|_|    \_/ |_|\___| \_/\_/  

*/

QHeaderView::section {
    background-color: #434c5e;
    color: #f8f8f2;
    padding-left: 4px;
    border: 1px solid #434c5e;
}

/*
   ____  __                _ _   ___            
  /___ \/ _\ ___ _ __ ___ | | | / __\ __ _ _ __ 
 //  / /\ \ / __| '__/ _ \| | |/__\/// _` | '__|
/ \_/ / _\ \ (__| | | (_) | | / \/  \ (_| | |   
\___,_\ \__/\___|_|  \___/|_|_\_____/\__,_|_|   

From Quassel Wiki: http://sprunge.us/iZGB
*/

QScrollBar {
    background: #2e3440;
    margin: 0;
}

QScrollBar:hover {
    background: #3b4252;
}

QScrollBar:vertical {
    width: 8px;
}

QScrollBar:horizontal {
    height: 8px;
}

QScrollBar::handle {
    padding: 0;
    margin: 2px;
    border-radius: 2px;
    border: 2px solid #5e81ac;
    background: #5e81ac;
}

QScrollBar::handle:vertical {
    min-height: 20px;
    min-width: 0px;
}

QScrollBar::handle:horizontal {
    min-width: 20px;
    min-height: 0px;
}

QScrollBar::add-line , QScrollBar::sub-line {
    height: 0px;
    border: 0px;
}

QScrollBar::up-arrow, QScrollBar::down-arrow {
    border: 0px;
    width: 0px;
    height: 0px;
}

QScrollBar::add-page, QScrollBar::sub-page {
    background: none;
}

/*
   ____  _____          _     __   _ _ _   
  /___ \/__   \_____  _| |_  /__\_| (_) |_ 
 //  / /  / /\/ _ \ \/ / __|/_\/ _` | | __|
/ \_/ /  / / |  __/>  <| |_//_| (_| | | |_ 
\___,_\  \/   \___/_/\_\\__\__/\__,_|_|\__|

*/

QTextEdit {
    background-color: #3b4252;
}

QTextEdit#HydrusValid {
    background-color: #a3be8c;
}

QTextEdit#HydrusIndeterminate {
    background-color: #b48ead;
}

QTextEdit#HydrusInvalid {
    background-color: #bf616a;
}

/*
   ____  ___ _       _      _____          _     __   _ _ _   
  /___ \/ _ \ | __ _(_)_ __/__   \_____  _| |_  /__\_| (_) |_ 
 //  / / /_)/ |/ _` | | '_ \ / /\/ _ \ \/ / __|/_\/ _` | | __|
/ \_/ / ___/| | (_| | | | | / / |  __/>  <| |_//_| (_| | | |_ 
\___,_\/    |_|\__,_|_|_| |_\/   \___/_/\_\\__\__/\__,_|_|\__|

*/

QPlainTextEdit {
    background-color: #3b4252;
}

/*
   ____  __       _          _ 
  /___ \/ /  __ _| |__   ___| |
 //  / / /  / _` | '_ \ / _ \ |
/ \_/ / /__| (_| | |_) |  __/ |
\___,_\____/\__,_|_.__/ \___|_|

*/

QLabel#HydrusValid {
    color: #a3be8c;
}

QLabel#HydrusIndeterminate {
    color: #b48ead;
}

QLabel#HydrusInvalid {
    color: #bf616a;
}

QLabel#HydrusWarning {
    color: #bf616a;
}

/*
   ____  __ _              __   _ _ _   
  /___ \/ /(_)_ __   ___  /__\_| (_) |_ 
 //  / / / | | '_ \ / _ \/_\/ _` | | __|
/ \_/ / /__| | | | |  __//_| (_| | | |_ 
\___,_\____/_|_| |_|\___\__/\__,_|_|\__|

*/

QLineEdit { 
    border: 1px solid #5e81ac; 
    border-radius: 1px;
    background-color: #3b4252;
    padding: 1px;
} 

QLineEdit:focus{
    color: #eceff4;
    border: 1px solid #81a1c1;
}

QLineEdit#HydrusValid {
    background-color: #a3be8c;
}

QLineEdit#HydrusIndeterminateValid {
    background-color: #b48ead;
}

QLineEdit#HydrusInvalid {
    background-color: #bf616a;
}

/*
   ____  ___ _               _      ___           
  /___ \/ __\ |__   ___  ___| | __ / __\ _____  __
 //  / / /  | '_ \ / _ \/ __| |/ //__\/// _ \ \/ /
/ \_/ / /___| | | |  __/ (__|   </ \/  \ (_) >  < 
\___,_\____/|_| |_|\___|\___|_|\_\_____/\___/_/\_\

*/

QCheckBox#HydrusWarning {
    color: #bf616a;
}

/*

Here is more hydev added--now we have this tech, I am copying the default 'darkmode' colours in the options to all of the darkmode stylesheets so the default choice for new users isn't the dark/light jank-mix. Stylesheet authors are welcome to fix this up with better colours for their particular style and send them in.

*/


/* The main thumbnail grid. */

QWidget#HydrusMediaList
{
    qproperty-hmrp_background: #343434;
    qproperty-hmrp_thumbnail_local_background_normal: #404048;
    qproperty-hmrp_thumbnail_local_border_normal: #91a3b0;
    qproperty-hmrp_thumbnail_local_background_selected: #708090;
    qproperty-hmrp_thumbnail_local_border_selected: #dfe3e6;
    qproperty-hmrp_thumbnail_not_local_background_normal: #400d02;
    qproperty-hmrp_thumbnail_not_local_border_normal: #f8d0cc;
    qproperty-hmrp_thumbnail_not_local_background_selected: #ab274f;
    qproperty-hmrp_thumbnail_not_local_border_selected: #e34234;
}


/* The media viewer. */

QWidget#HydrusMediaViewer
{
    qproperty-hmv_background: #343434;
    qproperty-hmv_text: #708090;
}


/* The tag autocomplete text input. */

QWidget#HydrusTagAutocomplete
{
    qproperty-hta_background: #536267;
}


/* Tag lists across the program. */

QWidget#HydrusTagList
{
    qproperty-htl_background: #232629;
}
